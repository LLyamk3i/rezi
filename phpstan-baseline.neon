parameters:
	ignoreErrors:
		-
			message: "#^Parameter \\#5 \\$config \\(array\\<string, mixed\\>\\) of method App\\\\Database\\\\ConnectionFactory\\:\\:createConnection\\(\\) should be contravariant with parameter \\$config \\(array\\) of method Illuminate\\\\Database\\\\Connectors\\\\ConnectionFactory\\:\\:createConnection\\(\\)$#"
			count: 1
			path: app/Database/ConnectionFactory.php

		-
			message: "#^Trying to invoke mixed but it's not a callable\\.$#"
			count: 1
			path: app/Database/ConnectionFactory.php

		-
			message: "#^Parameter \\$callback of static method Illuminate\\\\Support\\\\Facades\\\\App\\:\\:call\\(\\) expects \\(callable\\(\\)\\: mixed\\)\\|string, array\\{mixed, 'run'\\} given\\.$#"
			count: 1
			path: database/seeders/DatabaseSeeder.php

		-
			message: "#^Parameter \\$columns of method Illuminate\\\\Database\\\\Eloquent\\\\Builder\\<Modules\\\\Residence\\\\Infrastructure\\\\Models\\\\Residence\\>\\:\\:first\\(\\) expects array\\<int, string\\>\\|string, array\\<int, Illuminate\\\\Contracts\\\\Database\\\\Query\\\\Expression\\|string\\> given\\.$#"
			count: 1
			path: modules/Admin/Infrastructure/Filament/Shared/Resources/ResidenceResource/Pages/EditResidence.php

		-
			message: "#^Call to an undefined method Illuminate\\\\Database\\\\Eloquent\\\\Builder\\<Illuminate\\\\Foundation\\\\Auth\\\\User\\>\\:\\:default\\(\\)\\.$#"
			count: 1
			path: modules/Admin/Infrastructure/Models/Admin.php

		-
			message: "#^Call to an undefined method Illuminate\\\\Database\\\\Eloquent\\\\Builder\\<Illuminate\\\\Database\\\\Eloquent\\\\Model\\>\\:\\:default\\(\\)\\.$#"
			count: 1
			path: modules/Admin/Infrastructure/Models/Client.php

		-
			message: "#^Call to an undefined method Illuminate\\\\Database\\\\Eloquent\\\\Builder\\<Illuminate\\\\Foundation\\\\Auth\\\\User\\>\\:\\:default\\(\\)\\.$#"
			count: 1
			path: modules/Admin/Infrastructure/Models/Provider.php

		-
			message: "#^Parameter \\$callback of method Illuminate\\\\Support\\\\Collection\\<\\(int\\|string\\),mixed\\>\\:\\:map\\(\\) expects callable\\(mixed, int\\|string\\)\\: array\\{user_id\\: string, role_id\\: mixed\\}, Closure\\(array\\)\\: array\\{user_id\\: string, role_id\\: mixed\\} given\\.$#"
			count: 1
			path: modules/Authentication/Infrastructure/Eloquent/Repositories/EloquentAuthRepository.php

		-
			message: "#^Dynamic call to static method Illuminate\\\\Database\\\\Eloquent\\\\Relations\\\\MorphOne\\<Modules\\\\Shared\\\\Infrastructure\\\\Models\\\\Media\\>\\:\\:where\\(\\)\\.$#"
			count: 1
			path: modules/Authentication/Infrastructure/Models/User.php

		-
			message: "#^Method Modules\\\\Authentication\\\\Infrastructure\\\\Models\\\\User\\:\\:query\\(\\) should return Modules\\\\Authentication\\\\Infrastructure\\\\Eloquent\\\\QueryBuilders\\\\UserQueryBuilder but returns Illuminate\\\\Database\\\\Eloquent\\\\Builder\\<Illuminate\\\\Foundation\\\\Auth\\\\User\\>\\.$#"
			count: 1
			path: modules/Authentication/Infrastructure/Models/User.php

		-
			message: "#^Parameter \\$get of static method Illuminate\\\\Database\\\\Eloquent\\\\Casts\\\\Attribute\\<mixed,mixed\\>\\:\\:make\\(\\) expects \\(callable\\(mixed, mixed\\)\\: string\\)\\|null, Closure\\(mixed, array\\)\\: non\\-falsy\\-string given\\.$#"
			count: 1
			path: modules/Authentication/Infrastructure/Models/User.php

		-
			message: "#^Parameter \\$get of static method Illuminate\\\\Database\\\\Eloquent\\\\Casts\\\\Attribute\\<mixed,mixed\\>\\:\\:make\\(\\) expects \\(callable\\(mixed, mixed\\)\\: string\\)\\|null, Closure\\(mixed, array\\)\\: string given\\.$#"
			count: 1
			path: modules/Authentication/Infrastructure/Models/User.php

		-
			message: "#^Method Modules\\\\Residence\\\\Domain\\\\Entities\\\\Owner\\:\\:__serialize\\(\\) should return array\\{id\\: string, name\\: string, avatar\\: string\\} but returns array\\{id\\: string, name\\: string, avatar\\: string\\|null\\}\\.$#"
			count: 1
			path: modules/Residence/Domain/Entities/Owner.php

		-
			message: "#^Method Modules\\\\Residence\\\\Domain\\\\Entities\\\\Residence\\:\\:serialize\\(\\) should return array\\{id\\: string, name\\: string, view\\: int, favoured\\: bool, address\\: string, description\\: string, distance\\: string, location\\: array\\<string, float\\>, \\.\\.\\.\\} but returns array\\{name\\: string, rooms\\: int\\|null, view\\: int\\|null, id\\: string, poster\\: string\\|null, address\\: string, favoured\\: bool, note\\: float\\|null, \\.\\.\\.\\}\\.$#"
			count: 1
			path: modules/Residence/Domain/Entities/Residence.php

		-
			message: "#^Method Modules\\\\Residence\\\\Domain\\\\Factories\\\\RatingFactory\\:\\:make\\(\\) throws checked exception Exception but it's missing from the PHPDoc @throws tag\\.$#"
			count: 1
			path: modules/Residence/Domain/Factories/RatingFactory.php

		-
			message: "#^Offset 'residence' on array\\{id\\: string, created_at\\: string, value\\: float, comment\\: string, owner\\?\\: Modules\\\\Residence\\\\Domain\\\\Entities\\\\Owner, residence\\: string\\} in isset\\(\\) always exists and is not nullable\\.$#"
			count: 1
			path: modules/Residence/Domain/Factories/RatingFactory.php

		-
			message: "#^Parameter \\$data of method Modules\\\\Residence\\\\Domain\\\\Factories\\\\OwnerFactory\\:\\:make\\(\\) expects array\\{id\\: string, name\\: string, avatar\\?\\: string, surname\\: string, forename\\: string, owner_id\\?\\: string, owner_avatar\\?\\: string, owner_surname\\?\\: string, \\.\\.\\.\\}, non\\-empty\\-array\\<string, string\\> given\\.$#"
			count: 1
			path: modules/Residence/Domain/Factories/ResidenceFactory.php

		-
			message: "#^Parameter \\$data of method Modules\\\\Residence\\\\Domain\\\\Factories\\\\OwnerFactory\\:\\:make\\(\\) expects array\\{id\\: string, name\\: string, avatar\\?\\: string, surname\\: string, forename\\: string, owner_id\\?\\: string, owner_avatar\\?\\: string, owner_surname\\?\\: string, \\.\\.\\.\\}, array\\<int\\|string, mixed\\> given\\.$#"
			count: 1
			path: modules/Residence/Domain/Hydrators/RatingHydrator.php

		-
			message: "#^Parameter \\$data of method Modules\\\\Residence\\\\Domain\\\\Factories\\\\RatingFactory\\:\\:make\\(\\) expects array\\{id\\: string, created_at\\: string, value\\: float, comment\\: string, owner\\?\\: Modules\\\\Residence\\\\Domain\\\\Entities\\\\Owner, residence\\: string\\}, non\\-empty\\-array given\\.$#"
			count: 1
			path: modules/Residence/Domain/Hydrators/RatingHydrator.php

		-
			message: "#^Callable callable\\(string\\)\\: string invoked with 2 parameters, 1 required\\.$#"
			count: 1
			path: modules/Residence/Infrastructure/Database/Factories/RatingFactory.php

		-
			message: "#^Parameter \\#1 \\$id of callable callable\\(string\\)\\: string expects string, mixed given\\.$#"
			count: 1
			path: modules/Residence/Infrastructure/Database/Factories/RatingFactory.php

		-
			message: "#^Parameter \\$state of method Illuminate\\\\Database\\\\Eloquent\\\\Factories\\\\Factory\\<Modules\\\\Residence\\\\Infrastructure\\\\Models\\\\Rating\\>\\:\\:state\\(\\) expects array\\<string, mixed\\>\\|\\(callable\\(array\\<string, mixed\\>, Illuminate\\\\Database\\\\Eloquent\\\\Model\\|null\\)\\: array\\<string, mixed\\>\\), Closure\\(array, Modules\\\\Residence\\\\Infrastructure\\\\Models\\\\Residence\\)\\: array\\{user_id\\: string\\} given\\.$#"
			count: 1
			path: modules/Residence/Infrastructure/Database/Factories/RatingFactory.php

		-
			message: "#^Return type \\(array\\<Illuminate\\\\Contracts\\\\Database\\\\Query\\\\Expression\\|int\\|string\\>\\) of method Modules\\\\Residence\\\\Infrastructure\\\\Database\\\\Factories\\\\ResidenceFactory\\:\\:definition\\(\\) should be covariant with return type \\(array\\<string, mixed\\>\\) of method Illuminate\\\\Database\\\\Eloquent\\\\Factories\\\\Factory\\<Modules\\\\Residence\\\\Infrastructure\\\\Models\\\\Residence\\>\\:\\:definition\\(\\)$#"
			count: 1
			path: modules/Residence/Infrastructure/Database/Factories/ResidenceFactory.php

		-
			message: "#^Parameter \\$data of method Modules\\\\Residence\\\\Infrastructure\\\\Eloquent\\\\Repositories\\\\EloquentResidenceRepository\\:\\:search\\(\\) expects array\\{types\\: array\\<Modules\\\\Shared\\\\Domain\\\\ValueObjects\\\\Ulid\\>, latest\\: bool, features\\: array\\<Modules\\\\Shared\\\\Domain\\\\ValueObjects\\\\Ulid\\>, rent\\: array\\{min\\?\\: Modules\\\\Shared\\\\Domain\\\\ValueObjects\\\\Price, max\\?\\: Modules\\\\Shared\\\\Domain\\\\ValueObjects\\\\Price\\}, stay\\: Modules\\\\Shared\\\\Domain\\\\ValueObjects\\\\Duration\\|null, keyword\\: string\\|null\\}, array\\{latest\\: true\\} given\\.$#"
			count: 1
			path: modules/Residence/Infrastructure/Eloquent/Repositories/EloquentResidenceRepository.php

		-
			message: "#^Dynamic call to static method Illuminate\\\\Database\\\\Eloquent\\\\Builder\\<Modules\\\\Residence\\\\Infrastructure\\\\Models\\\\View\\>\\:\\:exists\\(\\)\\.$#"
			count: 1
			path: modules/Residence/Infrastructure/Http/Controllers/ViewController.php

		-
			message: "#^Method Modules\\\\Residence\\\\Infrastructure\\\\Http\\\\Requests\\\\SearchResidencesRequest\\:\\:rent\\(\\) should return array\\{min\\?\\: Modules\\\\Shared\\\\Domain\\\\ValueObjects\\\\Price, max\\?\\: Modules\\\\Shared\\\\Domain\\\\ValueObjects\\\\Price\\} but returns array\\.$#"
			count: 1
			path: modules/Residence/Infrastructure/Http/Requests/SearchResidencesRequest.php

		-
			message: "#^Dynamic call to static method Illuminate\\\\Database\\\\Eloquent\\\\Relations\\\\MorphOne\\<Modules\\\\Shared\\\\Infrastructure\\\\Models\\\\Media\\>\\:\\:where\\(\\)\\.$#"
			count: 1
			path: modules/Residence/Infrastructure/Models/Feature.php

		-
			message: "#^Dynamic call to static method Illuminate\\\\Database\\\\Eloquent\\\\Relations\\\\MorphMany\\<Modules\\\\Shared\\\\Infrastructure\\\\Models\\\\Media\\>\\:\\:where\\(\\)\\.$#"
			count: 1
			path: modules/Residence/Infrastructure/Models/Residence.php

		-
			message: "#^Dynamic call to static method Illuminate\\\\Database\\\\Eloquent\\\\Relations\\\\MorphOne\\<Modules\\\\Shared\\\\Infrastructure\\\\Models\\\\Media\\>\\:\\:where\\(\\)\\.$#"
			count: 1
			path: modules/Residence/Infrastructure/Models/Residence.php

		-
			message: "#^Method Modules\\\\Residence\\\\Infrastructure\\\\Queries\\\\ResidenceDetailsQuery\\:\\:gallery\\(\\) should return array\\<int, string\\> but returns array\\.$#"
			count: 1
			path: modules/Residence/Infrastructure/Queries/ResidenceDetailsQuery.php

		-
			message: "#^Parameter \\$callback of method Illuminate\\\\Support\\\\Collection\\<\\(int\\|string\\),mixed\\>\\:\\:map\\(\\) expects callable\\(mixed, int\\|string\\)\\: string, Closure\\(string\\)\\: string given\\.$#"
			count: 1
			path: modules/Residence/Infrastructure/Queries/ResidenceDetailsQuery.php

		-
			message: "#^Parameter \\$data of method Modules\\\\Reservation\\\\Domain\\\\Hydrators\\\\ReservationHydrator\\:\\:hydrate\\(\\) expects array\\<int, array\\{id\\: string, user\\?\\: string, cost\\?\\: float, status\\?\\: string, residence\\?\\: string, checkin_at\\: string, checkout_at\\: string\\}\\>, array given\\.$#"
			count: 1
			path: modules/Residence/Infrastructure/Queries/ResidenceDetailsQuery.php

		-
			message: "#^Parameter \\$data of method Modules\\\\Residence\\\\Domain\\\\Factories\\\\ResidenceFactory\\:\\:make\\(\\) expects array\\{id\\: string, name\\: string, rooms\\?\\: int\\|null, address\\: string, view\\?\\: int, note\\?\\: float, favoured\\?\\: bool, rent\\?\\: float, \\.\\.\\.\\}, non\\-empty\\-array\\<string, array\\<Modules\\\\Reservation\\\\Domain\\\\Entities\\\\Reservation\\|Modules\\\\Residence\\\\Domain\\\\Entities\\\\Feature\\|Modules\\\\Residence\\\\Domain\\\\Entities\\\\Rating\\|string\\>\\|bool\\|float\\|int\\|Modules\\\\Residence\\\\Domain\\\\Entities\\\\Type\\|string\\|null\\> given\\.$#"
			count: 1
			path: modules/Residence/Infrastructure/Queries/ResidenceDetailsQuery.php

		-
			message: "#^Parameter \\$data of method Modules\\\\Residence\\\\Domain\\\\Factories\\\\TypeFactory\\:\\:make\\(\\) expects array\\{id\\: string, name\\: string, type_id\\?\\: string, type_name\\?\\: string\\}, non\\-empty\\-array\\<string, float\\|int\\|string\\> given\\.$#"
			count: 1
			path: modules/Residence/Infrastructure/Queries/ResidenceDetailsQuery.php

		-
			message: "#^Parameter \\$data of method Modules\\\\Residence\\\\Domain\\\\Hydrators\\\\FeatureHydrator\\:\\:hydrate\\(\\) expects array\\<int, array\\{id\\: string, name\\: string, icon\\?\\: string\\}\\>, array given\\.$#"
			count: 1
			path: modules/Residence/Infrastructure/Queries/ResidenceDetailsQuery.php

		-
			message: "#^Parameter \\$data of method Modules\\\\Residence\\\\Domain\\\\Hydrators\\\\RatingHydrator\\:\\:hydrate\\(\\) expects array\\<int, array\\{id\\: string, created_at\\: string, value\\: float, comment\\: string, owner\\?\\: Modules\\\\Residence\\\\Domain\\\\Entities\\\\Owner, residence\\: string\\}\\>, array given\\.$#"
			count: 1
			path: modules/Residence/Infrastructure/Queries/ResidenceDetailsQuery.php

		-
			message: "#^Method Modules\\\\Residence\\\\Infrastructure\\\\Resources\\\\RatingResource\\:\\:toArray\\(\\) should return array\\{id\\: string, value\\: float, comment\\: string, residence\\?\\: string, owner\\: Modules\\\\Residence\\\\Infrastructure\\\\Resources\\\\OwnerResource\\} but returns array\\{id\\: string, value\\: float, comment\\: string, residence\\?\\: string\\|null, owner\\: Modules\\\\Residence\\\\Infrastructure\\\\Resources\\\\OwnerResource\\}\\.$#"
			count: 1
			path: modules/Residence/Infrastructure/Resources/RatingResource.php

		-
			message: "#^Called 'first' on Laravel collection, but could have been retrieved as a query\\.$#"
			count: 1
			path: modules/Shared/Infrastructure/Eloquent/Repositories/QueryRepository.php
